/*
 * Created on 17 May 2016 ( Time 04:14:36 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.marks.business.service.mapping;

import static org.junit.Assert.assertEquals;

import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Test;
import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;
import org.marks.bean.Specialities;
import org.marks.bean.jpa.SpecialitiesEntity;
import org.marks.test.MockValues;

/**
 * Test : Mapping between entity beans and display beans.
 */
public class SpecialitiesServiceMapperTest {

	private SpecialitiesServiceMapper specialitiesServiceMapper;

	private static ModelMapper modelMapper = new ModelMapper();

	private MockValues mockValues = new MockValues();
	
	
	@BeforeClass
	public static void setUp() {
		modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
	}
	
	@Before
	public void before() {
		specialitiesServiceMapper = new SpecialitiesServiceMapper();
		specialitiesServiceMapper.setModelMapper(modelMapper);
	}
	
	/**
	 * Mapping from 'SpecialitiesEntity' to 'Specialities'
	 * @param specialitiesEntity
	 */
	@Test
	public void testMapSpecialitiesEntityToSpecialities() {
		// Given
		SpecialitiesEntity specialitiesEntity = new SpecialitiesEntity();
		specialitiesEntity.setSpecialityName(mockValues.nextString(2147483647));
		
		// When
		Specialities specialities = specialitiesServiceMapper.mapSpecialitiesEntityToSpecialities(specialitiesEntity);
		
		// Then
		assertEquals(specialitiesEntity.getSpecialityName(), specialities.getSpecialityName());
	}
	
	/**
	 * Test : Mapping from 'Specialities' to 'SpecialitiesEntity'
	 */
	@Test
	public void testMapSpecialitiesToSpecialitiesEntity() {
		// Given
		Specialities specialities = new Specialities();
		specialities.setSpecialityName(mockValues.nextString(2147483647));

		SpecialitiesEntity specialitiesEntity = new SpecialitiesEntity();
		
		// When
		specialitiesServiceMapper.mapSpecialitiesToSpecialitiesEntity(specialities, specialitiesEntity);
		
		// Then
		assertEquals(specialities.getSpecialityName(), specialitiesEntity.getSpecialityName());
	}

}