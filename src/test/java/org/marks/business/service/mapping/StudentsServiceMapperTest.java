/*
 * Created on 17 May 2016 ( Time 04:14:36 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.marks.business.service.mapping;

import static org.junit.Assert.assertEquals;

import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Test;
import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;
import org.marks.bean.Students;
import org.marks.bean.jpa.StudentsEntity;
import org.marks.bean.jpa.GroupsEntity;
import org.marks.test.MockValues;

/**
 * Test : Mapping between entity beans and display beans.
 */
public class StudentsServiceMapperTest {

	private StudentsServiceMapper studentsServiceMapper;

	private static ModelMapper modelMapper = new ModelMapper();

	private MockValues mockValues = new MockValues();
	
	
	@BeforeClass
	public static void setUp() {
		modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
	}
	
	@Before
	public void before() {
		studentsServiceMapper = new StudentsServiceMapper();
		studentsServiceMapper.setModelMapper(modelMapper);
	}
	
	/**
	 * Mapping from 'StudentsEntity' to 'Students'
	 * @param studentsEntity
	 */
	@Test
	public void testMapStudentsEntityToStudents() {
		// Given
		StudentsEntity studentsEntity = new StudentsEntity();
		studentsEntity.setFullName(mockValues.nextString(2147483647));
		studentsEntity.setRecordBookNumber(mockValues.nextInteger());
		studentsEntity.setStartYear(mockValues.nextDate());
		studentsEntity.setEndYear(mockValues.nextDate());
		studentsEntity.setGroups(new GroupsEntity());
		studentsEntity.getGroups().setId(mockValues.nextInteger());
		
		// When
		Students students = studentsServiceMapper.mapStudentsEntityToStudents(studentsEntity);
		
		// Then
		assertEquals(studentsEntity.getFullName(), students.getFullName());
		assertEquals(studentsEntity.getRecordBookNumber(), students.getRecordBookNumber());
		assertEquals(studentsEntity.getStartYear(), students.getStartYear());
		assertEquals(studentsEntity.getEndYear(), students.getEndYear());
		assertEquals(studentsEntity.getGroups().getId(), students.getGroupId());
	}
	
	/**
	 * Test : Mapping from 'Students' to 'StudentsEntity'
	 */
	@Test
	public void testMapStudentsToStudentsEntity() {
		// Given
		Students students = new Students();
		students.setFullName(mockValues.nextString(2147483647));
		students.setRecordBookNumber(mockValues.nextInteger());
		students.setStartYear(mockValues.nextDate());
		students.setEndYear(mockValues.nextDate());
		students.setGroupId(mockValues.nextInteger());

		StudentsEntity studentsEntity = new StudentsEntity();
		
		// When
		studentsServiceMapper.mapStudentsToStudentsEntity(students, studentsEntity);
		
		// Then
		assertEquals(students.getFullName(), studentsEntity.getFullName());
		assertEquals(students.getRecordBookNumber(), studentsEntity.getRecordBookNumber());
		assertEquals(students.getStartYear(), studentsEntity.getStartYear());
		assertEquals(students.getEndYear(), studentsEntity.getEndYear());
		assertEquals(students.getGroupId(), studentsEntity.getGroups().getId());
	}

}