/*
 * Created on 17 May 2016 ( Time 04:14:36 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.marks.business.service.mapping;

import static org.junit.Assert.assertEquals;

import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Test;
import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;
import org.marks.bean.Teachers;
import org.marks.bean.jpa.TeachersEntity;
import org.marks.bean.jpa.RolesEntity;
import org.marks.test.MockValues;

/**
 * Test : Mapping between entity beans and display beans.
 */
public class TeachersServiceMapperTest {

	private TeachersServiceMapper teachersServiceMapper;

	private static ModelMapper modelMapper = new ModelMapper();

	private MockValues mockValues = new MockValues();
	
	
	@BeforeClass
	public static void setUp() {
		modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
	}
	
	@Before
	public void before() {
		teachersServiceMapper = new TeachersServiceMapper();
		teachersServiceMapper.setModelMapper(modelMapper);
	}
	
	/**
	 * Mapping from 'TeachersEntity' to 'Teachers'
	 * @param teachersEntity
	 */
	@Test
	public void testMapTeachersEntityToTeachers() {
		// Given
		TeachersEntity teachersEntity = new TeachersEntity();
		teachersEntity.setFullName(mockValues.nextString(2147483647));
		teachersEntity.setLogin(mockValues.nextString(50));
		teachersEntity.setPassword(mockValues.nextString(50));
		teachersEntity.setCathedra(mockValues.nextString(50));
		teachersEntity.setEnabled(mockValues.nextString(2147483647));
		teachersEntity.setRoles(new RolesEntity());
		teachersEntity.getRoles().setId(mockValues.nextInteger());
		
		// When
		Teachers teachers = teachersServiceMapper.mapTeachersEntityToTeachers(teachersEntity);
		
		// Then
		assertEquals(teachersEntity.getFullName(), teachers.getFullName());
		assertEquals(teachersEntity.getLogin(), teachers.getLogin());
		assertEquals(teachersEntity.getPassword(), teachers.getPassword());
		assertEquals(teachersEntity.getCathedra(), teachers.getCathedra());
		assertEquals(teachersEntity.getEnabled(), teachers.getEnabled());
		assertEquals(teachersEntity.getRoles().getId(), teachers.getRoleId());
	}
	
	/**
	 * Test : Mapping from 'Teachers' to 'TeachersEntity'
	 */
	@Test
	public void testMapTeachersToTeachersEntity() {
		// Given
		Teachers teachers = new Teachers();
		teachers.setFullName(mockValues.nextString(2147483647));
		teachers.setLogin(mockValues.nextString(50));
		teachers.setPassword(mockValues.nextString(50));
		teachers.setCathedra(mockValues.nextString(50));
		teachers.setEnabled(mockValues.nextString(2147483647));
		teachers.setRoleId(mockValues.nextInteger());

		TeachersEntity teachersEntity = new TeachersEntity();
		
		// When
		teachersServiceMapper.mapTeachersToTeachersEntity(teachers, teachersEntity);
		
		// Then
		assertEquals(teachers.getFullName(), teachersEntity.getFullName());
		assertEquals(teachers.getLogin(), teachersEntity.getLogin());
		assertEquals(teachers.getPassword(), teachersEntity.getPassword());
		assertEquals(teachers.getCathedra(), teachersEntity.getCathedra());
		assertEquals(teachers.getEnabled(), teachersEntity.getEnabled());
		assertEquals(teachers.getRoleId(), teachersEntity.getRoles().getId());
	}

}