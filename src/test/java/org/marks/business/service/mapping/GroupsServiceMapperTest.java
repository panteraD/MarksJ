/*
 * Created on 17 May 2016 ( Time 04:14:36 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.marks.business.service.mapping;

import static org.junit.Assert.assertEquals;

import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Test;
import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;
import org.marks.bean.Groups;
import org.marks.bean.jpa.GroupsEntity;
import org.marks.bean.jpa.SpecialitiesEntity;
import org.marks.bean.jpa.SpecialitiesEntity;
import org.marks.test.MockValues;

/**
 * Test : Mapping between entity beans and display beans.
 */
public class GroupsServiceMapperTest {

	private GroupsServiceMapper groupsServiceMapper;

	private static ModelMapper modelMapper = new ModelMapper();

	private MockValues mockValues = new MockValues();
	
	
	@BeforeClass
	public static void setUp() {
		modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
	}
	
	@Before
	public void before() {
		groupsServiceMapper = new GroupsServiceMapper();
		groupsServiceMapper.setModelMapper(modelMapper);
	}
	
	/**
	 * Mapping from 'GroupsEntity' to 'Groups'
	 * @param groupsEntity
	 */
	@Test
	public void testMapGroupsEntityToGroups() {
		// Given
		GroupsEntity groupsEntity = new GroupsEntity();
		groupsEntity.setCourse(mockValues.nextInteger());
		groupsEntity.setGroupNumber(mockValues.nextInteger());
		groupsEntity.setFaculty(mockValues.nextString(80));
		groupsEntity.setSpecialities(new SpecialitiesEntity());
		groupsEntity.getSpecialities().setId(mockValues.nextInteger());

		// When
		Groups groups = groupsServiceMapper.mapGroupsEntityToGroups(groupsEntity);
		
		// Then
		assertEquals(groupsEntity.getCourse(), groups.getCourse());
		assertEquals(groupsEntity.getGroupNumber(), groups.getGroupNumber());
		assertEquals(groupsEntity.getFaculty(), groups.getFaculty());
		assertEquals(groupsEntity.getSpecialities().getId(), groups.getSpecialityId());

	}
	
	/**
	 * Test : Mapping from 'Groups' to 'GroupsEntity'
	 */
	@Test
	public void testMapGroupsToGroupsEntity() {
		// Given
		Groups groups = new Groups();
		groups.setCourse(mockValues.nextInteger());
		groups.setGroupNumber(mockValues.nextInteger());
		groups.setFaculty(mockValues.nextString(80));
		groups.setSpecialityId(mockValues.nextInteger());
		groups.setSpecialityId(mockValues.nextInteger());

		GroupsEntity groupsEntity = new GroupsEntity();
		
		// When
		groupsServiceMapper.mapGroupsToGroupsEntity(groups, groupsEntity);
		
		// Then
		assertEquals(groups.getCourse(), groupsEntity.getCourse());
		assertEquals(groups.getGroupNumber(), groupsEntity.getGroupNumber());
		assertEquals(groups.getFaculty(), groupsEntity.getFaculty());
		assertEquals(groups.getSpecialityId(), groupsEntity.getSpecialities().getId());

	}

}