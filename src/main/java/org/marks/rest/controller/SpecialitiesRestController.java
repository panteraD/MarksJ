/*
 * Created on 17 May 2016 ( Time 04:14:22 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.marks.rest.controller;

import java.util.LinkedList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.marks.bean.Specialities;
import org.marks.business.service.SpecialitiesService;
import org.marks.web.listitem.SpecialitiesListItem;

/**
 * Spring MVC controller for 'Specialities' management.
 */
@Controller
public class SpecialitiesRestController {

	@Resource
	private SpecialitiesService specialitiesService;
	
	@RequestMapping( value="/items/specialities",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<SpecialitiesListItem> findAllAsListItems() {
		List<Specialities> list = specialitiesService.findAll();
		List<SpecialitiesListItem> items = new LinkedList<SpecialitiesListItem>();
		for ( Specialities specialities : list ) {
			items.add(new SpecialitiesListItem( specialities ) );
		}
		return items;
	}
	
	@RequestMapping( value="/specialities",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<Specialities> findAll() {
		return specialitiesService.findAll();
	}

	@RequestMapping( value="/specialities/{id}",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Specialities findOne(@PathVariable("id") Integer id) {
		return specialitiesService.findById(id);
	}
	
	@RequestMapping( value="/specialities",
			method = RequestMethod.POST,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Specialities create(@RequestBody Specialities specialities) {
		return specialitiesService.create(specialities);
	}

	@RequestMapping( value="/specialities/{id}",
			method = RequestMethod.PUT,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Specialities update(@PathVariable("id") Integer id, @RequestBody Specialities specialities) {
		return specialitiesService.update(specialities);
	}

	@RequestMapping( value="/specialities/{id}",
			method = RequestMethod.DELETE,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public void delete(@PathVariable("id") Integer id) {
		specialitiesService.delete(id);
	}
	
}
