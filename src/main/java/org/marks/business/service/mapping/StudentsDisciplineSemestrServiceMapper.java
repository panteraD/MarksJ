/*
 * Created on 17 May 2016 ( Time 04:14:36 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.marks.business.service.mapping;

import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;
import org.marks.bean.StudentsDisciplineSemestr;
import org.marks.bean.jpa.StudentsDisciplineSemestrEntity;
import org.marks.bean.jpa.DisciplineParamsEntity;
import org.marks.bean.jpa.StudentsEntity;

/**
 * Mapping between entity beans and display beans.
 */
@Component
public class StudentsDisciplineSemestrServiceMapper extends AbstractServiceMapper {

	/**
	 * ModelMapper : bean to bean mapping library.
	 */
	private ModelMapper modelMapper;
	
	/**
	 * Constructor.
	 */
	public StudentsDisciplineSemestrServiceMapper() {
		modelMapper = new ModelMapper();
		modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
	}

	/**
	 * Mapping from 'StudentsDisciplineSemestrEntity' to 'StudentsDisciplineSemestr'
	 * @param studentsDisciplineSemestrEntity
	 */
	public StudentsDisciplineSemestr mapStudentsDisciplineSemestrEntityToStudentsDisciplineSemestr(StudentsDisciplineSemestrEntity studentsDisciplineSemestrEntity) {
		if(studentsDisciplineSemestrEntity == null) {
			return null;
		}

		//--- Generic mapping 
		StudentsDisciplineSemestr studentsDisciplineSemestr = map(studentsDisciplineSemestrEntity, StudentsDisciplineSemestr.class);

		//--- Link mapping ( link to DisciplineParams )
		if(studentsDisciplineSemestrEntity.getDisciplineParams() != null) {
			studentsDisciplineSemestr.setDisciplineParamId(studentsDisciplineSemestrEntity.getDisciplineParams().getId());
		}
		//--- Link mapping ( link to Students )
		if(studentsDisciplineSemestrEntity.getStudents() != null) {
			studentsDisciplineSemestr.setStudentId(studentsDisciplineSemestrEntity.getStudents().getId());
		}
		return studentsDisciplineSemestr;
	}
	
	/**
	 * Mapping from 'StudentsDisciplineSemestr' to 'StudentsDisciplineSemestrEntity'
	 * @param studentsDisciplineSemestr
	 * @param studentsDisciplineSemestrEntity
	 */
	public void mapStudentsDisciplineSemestrToStudentsDisciplineSemestrEntity(StudentsDisciplineSemestr studentsDisciplineSemestr, StudentsDisciplineSemestrEntity studentsDisciplineSemestrEntity) {
		if(studentsDisciplineSemestr == null) {
			return;
		}

		//--- Generic mapping 
		map(studentsDisciplineSemestr, studentsDisciplineSemestrEntity);

		//--- Link mapping ( link : studentsDisciplineSemestr )
		if( hasLinkToDisciplineParams(studentsDisciplineSemestr) ) {
			DisciplineParamsEntity disciplineParams1 = new DisciplineParamsEntity();
			disciplineParams1.setId( studentsDisciplineSemestr.getDisciplineParamId() );
			studentsDisciplineSemestrEntity.setDisciplineParams( disciplineParams1 );
		} else {
			studentsDisciplineSemestrEntity.setDisciplineParams( null );
		}

		//--- Link mapping ( link : studentsDisciplineSemestr )
		if( hasLinkToStudents(studentsDisciplineSemestr) ) {
			StudentsEntity students2 = new StudentsEntity();
			students2.setId( studentsDisciplineSemestr.getStudentId() );
			studentsDisciplineSemestrEntity.setStudents( students2 );
		} else {
			studentsDisciplineSemestrEntity.setStudents( null );
		}

	}
	
	/**
	 * Verify that DisciplineParams id is valid.
	 * @param DisciplineParams DisciplineParams
	 * @return boolean
	 */
	private boolean hasLinkToDisciplineParams(StudentsDisciplineSemestr studentsDisciplineSemestr) {
		if(studentsDisciplineSemestr.getDisciplineParamId() != null) {
			return true;
		}
		return false;
	}

	/**
	 * Verify that Students id is valid.
	 * @param Students Students
	 * @return boolean
	 */
	private boolean hasLinkToStudents(StudentsDisciplineSemestr studentsDisciplineSemestr) {
		if(studentsDisciplineSemestr.getStudentId() != null) {
			return true;
		}
		return false;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected ModelMapper getModelMapper() {
		return modelMapper;
	}

	protected void setModelMapper(ModelMapper modelMapper) {
		this.modelMapper = modelMapper;
	}

}