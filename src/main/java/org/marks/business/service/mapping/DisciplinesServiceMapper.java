/*
 * Created on 17 May 2016 ( Time 04:14:36 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.marks.business.service.mapping;

import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;
import org.marks.bean.Disciplines;
import org.marks.bean.jpa.DisciplinesEntity;
import org.marks.bean.jpa.TeachersEntity;

/**
 * Mapping between entity beans and display beans.
 */
@Component
public class DisciplinesServiceMapper extends AbstractServiceMapper {

	/**
	 * ModelMapper : bean to bean mapping library.
	 */
	private ModelMapper modelMapper;
	
	/**
	 * Constructor.
	 */
	public DisciplinesServiceMapper() {
		modelMapper = new ModelMapper();
		modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
	}

	/**
	 * Mapping from 'DisciplinesEntity' to 'Disciplines'
	 * @param disciplinesEntity
	 */
	public Disciplines mapDisciplinesEntityToDisciplines(DisciplinesEntity disciplinesEntity) {
		if(disciplinesEntity == null) {
			return null;
		}

		//--- Generic mapping 
		Disciplines disciplines = map(disciplinesEntity, Disciplines.class);

		//--- Link mapping ( link to Teachers )
		if(disciplinesEntity.getTeachers() != null) {
			disciplines.setTeacherId(disciplinesEntity.getTeachers().getId());
		}
		return disciplines;
	}
	
	/**
	 * Mapping from 'Disciplines' to 'DisciplinesEntity'
	 * @param disciplines
	 * @param disciplinesEntity
	 */
	public void mapDisciplinesToDisciplinesEntity(Disciplines disciplines, DisciplinesEntity disciplinesEntity) {
		if(disciplines == null) {
			return;
		}

		//--- Generic mapping 
		map(disciplines, disciplinesEntity);

		//--- Link mapping ( link : disciplines )
		if( hasLinkToTeachers(disciplines) ) {
			TeachersEntity teachers1 = new TeachersEntity();
			teachers1.setId( disciplines.getTeacherId() );
			disciplinesEntity.setTeachers( teachers1 );
		} else {
			disciplinesEntity.setTeachers( null );
		}

	}
	
	/**
	 * Verify that Teachers id is valid.
	 * @param Teachers Teachers
	 * @return boolean
	 */
	private boolean hasLinkToTeachers(Disciplines disciplines) {
		if(disciplines.getTeacherId() != null) {
			return true;
		}
		return false;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected ModelMapper getModelMapper() {
		return modelMapper;
	}

	protected void setModelMapper(ModelMapper modelMapper) {
		this.modelMapper = modelMapper;
	}

}