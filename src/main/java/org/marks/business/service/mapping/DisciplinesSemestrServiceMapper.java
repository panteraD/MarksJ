/*
 * Created on 17 May 2016 ( Time 04:14:36 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.marks.business.service.mapping;

import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;
import org.marks.bean.DisciplinesSemestr;
import org.marks.bean.jpa.DisciplinesSemestrEntity;
import org.marks.bean.jpa.DisciplinesEntity;
import org.marks.bean.jpa.SpecialitiesEntity;

/**
 * Mapping between entity beans and display beans.
 */
@Component
public class DisciplinesSemestrServiceMapper extends AbstractServiceMapper {

	/**
	 * ModelMapper : bean to bean mapping library.
	 */
	private ModelMapper modelMapper;
	
	/**
	 * Constructor.
	 */
	public DisciplinesSemestrServiceMapper() {
		modelMapper = new ModelMapper();
		modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
	}

	/**
	 * Mapping from 'DisciplinesSemestrEntity' to 'DisciplinesSemestr'
	 * @param disciplinesSemestrEntity
	 */
	public DisciplinesSemestr mapDisciplinesSemestrEntityToDisciplinesSemestr(DisciplinesSemestrEntity disciplinesSemestrEntity) {
		if(disciplinesSemestrEntity == null) {
			return null;
		}

		//--- Generic mapping 
		DisciplinesSemestr disciplinesSemestr = map(disciplinesSemestrEntity, DisciplinesSemestr.class);

		//--- Link mapping ( link to Disciplines )
		if(disciplinesSemestrEntity.getDisciplines() != null) {
			disciplinesSemestr.setDisciplineId(disciplinesSemestrEntity.getDisciplines().getId());
		}
		//--- Link mapping ( link to Specialities )
		if(disciplinesSemestrEntity.getSpecialities() != null) {
			disciplinesSemestr.setSpecialityId(disciplinesSemestrEntity.getSpecialities().getId());
		}
		return disciplinesSemestr;
	}
	
	/**
	 * Mapping from 'DisciplinesSemestr' to 'DisciplinesSemestrEntity'
	 * @param disciplinesSemestr
	 * @param disciplinesSemestrEntity
	 */
	public void mapDisciplinesSemestrToDisciplinesSemestrEntity(DisciplinesSemestr disciplinesSemestr, DisciplinesSemestrEntity disciplinesSemestrEntity) {
		if(disciplinesSemestr == null) {
			return;
		}

		//--- Generic mapping 
		map(disciplinesSemestr, disciplinesSemestrEntity);

		//--- Link mapping ( link : disciplinesSemestr )
		if( hasLinkToDisciplines(disciplinesSemestr) ) {
			DisciplinesEntity disciplines1 = new DisciplinesEntity();
			disciplines1.setId( disciplinesSemestr.getDisciplineId() );
			disciplinesSemestrEntity.setDisciplines( disciplines1 );
		} else {
			disciplinesSemestrEntity.setDisciplines( null );
		}

		//--- Link mapping ( link : disciplinesSemestr )
		if( hasLinkToSpecialities(disciplinesSemestr) ) {
			SpecialitiesEntity specialities2 = new SpecialitiesEntity();
			specialities2.setId( disciplinesSemestr.getSpecialityId() );
			disciplinesSemestrEntity.setSpecialities( specialities2 );
		} else {
			disciplinesSemestrEntity.setSpecialities( null );
		}

	}
	
	/**
	 * Verify that Disciplines id is valid.
	 * @param Disciplines Disciplines
	 * @return boolean
	 */
	private boolean hasLinkToDisciplines(DisciplinesSemestr disciplinesSemestr) {
		if(disciplinesSemestr.getDisciplineId() != null) {
			return true;
		}
		return false;
	}

	/**
	 * Verify that Specialities id is valid.
	 * @param Specialities Specialities
	 * @return boolean
	 */
	private boolean hasLinkToSpecialities(DisciplinesSemestr disciplinesSemestr) {
		if(disciplinesSemestr.getSpecialityId() != null) {
			return true;
		}
		return false;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected ModelMapper getModelMapper() {
		return modelMapper;
	}

	protected void setModelMapper(ModelMapper modelMapper) {
		this.modelMapper = modelMapper;
	}

}