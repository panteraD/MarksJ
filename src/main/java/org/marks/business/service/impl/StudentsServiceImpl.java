/*
 * Created on 17 May 2016 ( Time 04:14:36 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.marks.business.service.impl;

import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import org.marks.bean.Students;
import org.marks.bean.jpa.StudentsEntity;
import java.util.Date;
import java.util.List;
import org.marks.business.service.StudentsService;
import org.marks.business.service.mapping.StudentsServiceMapper;
import org.marks.persistence.PersistenceServiceProvider;
import org.marks.persistence.services.StudentsPersistence;
import org.springframework.stereotype.Component;

/**
 * Implementation of StudentsService
 */
@Component
public class StudentsServiceImpl implements StudentsService {

	private StudentsPersistence studentsPersistence;

	@Resource
	private StudentsServiceMapper studentsServiceMapper;
	
	public StudentsServiceImpl() {
		studentsPersistence = PersistenceServiceProvider.getService(StudentsPersistence.class);
	}
		
	@Override
	public Students findById(Integer id) {
		StudentsEntity entity = studentsPersistence.load(id);
		return studentsServiceMapper.mapStudentsEntityToStudents(entity);
	}

	@Override
	public List<Students> findAll() {
		List<StudentsEntity> entities = studentsPersistence.loadAll();
		List<Students> beans = new ArrayList<Students>();
		for(StudentsEntity entity : entities) {
			beans.add(studentsServiceMapper.mapStudentsEntityToStudents(entity));
		}
		return beans;
	}

	@Override
	public Students save(Students students) {
		return update(students) ;
	}

	@Override
	public Students create(Students students) {
		if(studentsPersistence.load(students.getId()) != null) {
			throw new IllegalStateException("already.exists");
		}
		StudentsEntity studentsEntity = new StudentsEntity();
		studentsServiceMapper.mapStudentsToStudentsEntity(students, studentsEntity);
		StudentsEntity studentsEntitySaved = studentsPersistence.save(studentsEntity);
		return studentsServiceMapper.mapStudentsEntityToStudents(studentsEntitySaved);
	}

	@Override
	public Students update(Students students) {
		StudentsEntity studentsEntity = studentsPersistence.load(students.getId());
		studentsServiceMapper.mapStudentsToStudentsEntity(students, studentsEntity);
		StudentsEntity studentsEntitySaved = studentsPersistence.save(studentsEntity);
		return studentsServiceMapper.mapStudentsEntityToStudents(studentsEntitySaved);
	}

	@Override
	public void delete(Integer id) {
		studentsPersistence.delete(id);
	}

	public StudentsPersistence getStudentsPersistence() {
		return studentsPersistence;
	}

	public void setStudentsPersistence(StudentsPersistence studentsPersistence) {
		this.studentsPersistence = studentsPersistence;
	}

	public StudentsServiceMapper getStudentsServiceMapper() {
		return studentsServiceMapper;
	}

	public void setStudentsServiceMapper(StudentsServiceMapper studentsServiceMapper) {
		this.studentsServiceMapper = studentsServiceMapper;
	}

}
