/*
 * Created on 17 May 2016 ( Time 04:14:36 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.marks.business.service.impl;

import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import org.marks.bean.Roles;
import org.marks.bean.jpa.RolesEntity;
import java.util.List;
import org.marks.business.service.RolesService;
import org.marks.business.service.mapping.RolesServiceMapper;
import org.marks.persistence.PersistenceServiceProvider;
import org.marks.persistence.services.RolesPersistence;
import org.springframework.stereotype.Component;

/**
 * Implementation of RolesService
 */
@Component
public class RolesServiceImpl implements RolesService {

	private RolesPersistence rolesPersistence;

	@Resource
	private RolesServiceMapper rolesServiceMapper;
	
	public RolesServiceImpl() {
		rolesPersistence = PersistenceServiceProvider.getService(RolesPersistence.class);
	}
		
	@Override
	public Roles findById(Integer id) {
		RolesEntity entity = rolesPersistence.load(id);
		return rolesServiceMapper.mapRolesEntityToRoles(entity);
	}

	@Override
	public List<Roles> findAll() {
		List<RolesEntity> entities = rolesPersistence.loadAll();
		List<Roles> beans = new ArrayList<Roles>();
		for(RolesEntity entity : entities) {
			beans.add(rolesServiceMapper.mapRolesEntityToRoles(entity));
		}
		return beans;
	}

	@Override
	public Roles save(Roles roles) {
		return update(roles) ;
	}

	@Override
	public Roles create(Roles roles) {
		if(rolesPersistence.load(roles.getId()) != null) {
			throw new IllegalStateException("already.exists");
		}
		RolesEntity rolesEntity = new RolesEntity();
		rolesServiceMapper.mapRolesToRolesEntity(roles, rolesEntity);
		RolesEntity rolesEntitySaved = rolesPersistence.save(rolesEntity);
		return rolesServiceMapper.mapRolesEntityToRoles(rolesEntitySaved);
	}

	@Override
	public Roles update(Roles roles) {
		RolesEntity rolesEntity = rolesPersistence.load(roles.getId());
		rolesServiceMapper.mapRolesToRolesEntity(roles, rolesEntity);
		RolesEntity rolesEntitySaved = rolesPersistence.save(rolesEntity);
		return rolesServiceMapper.mapRolesEntityToRoles(rolesEntitySaved);
	}

	@Override
	public void delete(Integer id) {
		rolesPersistence.delete(id);
	}

	public RolesPersistence getRolesPersistence() {
		return rolesPersistence;
	}

	public void setRolesPersistence(RolesPersistence rolesPersistence) {
		this.rolesPersistence = rolesPersistence;
	}

	public RolesServiceMapper getRolesServiceMapper() {
		return rolesServiceMapper;
	}

	public void setRolesServiceMapper(RolesServiceMapper rolesServiceMapper) {
		this.rolesServiceMapper = rolesServiceMapper;
	}

}
