/*
 * Created on 17 May 2016 ( Time 04:14:29 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package org.marks.bean.jpa;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;


import javax.persistence.*;

/**
 * Persistent class for entity stored in table "students_discipline_semestr"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="students_discipline_semestr", schema="sheet" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="StudentsDisciplineSemestrEntity.countAll", query="SELECT COUNT(x) FROM StudentsDisciplineSemestrEntity x" )
} )
public class StudentsDisciplineSemestrEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="id", nullable=false)
    private Integer    id           ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="student_score")
    private Integer    studentScore ;

	// "studentId" (column "student_id") is not defined by itself because used as FK in a link 
	// "disciplineParamId" (column "discipline_param_id") is not defined by itself because used as FK in a link 


    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
    @ManyToOne
    @JoinColumn(name="discipline_param_id", referencedColumnName="id")
    private DisciplineParamsEntity disciplineParams;

    @ManyToOne
    @JoinColumn(name="student_id", referencedColumnName="id")
    private StudentsEntity students    ;


    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public StudentsDisciplineSemestrEntity() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setId( Integer id ) {
        this.id = id ;
    }
    public Integer getId() {
        return this.id;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : student_score ( int4 ) 
    public void setStudentScore( Integer studentScore ) {
        this.studentScore = studentScore;
    }
    public Integer getStudentScore() {
        return this.studentScore;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    public void setDisciplineParams( DisciplineParamsEntity disciplineParams ) {
        this.disciplineParams = disciplineParams;
    }
    public DisciplineParamsEntity getDisciplineParams() {
        return this.disciplineParams;
    }

    public void setStudents( StudentsEntity students ) {
        this.students = students;
    }
    public StudentsEntity getStudents() {
        return this.students;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(id);
        sb.append("]:"); 
        sb.append(studentScore);
        return sb.toString(); 
    } 

}
