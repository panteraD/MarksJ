/*
 * Created on 17 May 2016 ( Time 04:14:29 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package org.marks.bean.jpa;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.List;

import javax.persistence.*;

/**
 * Persistent class for entity stored in table "teachers"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="teachers", schema="sheet" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="TeachersEntity.countAll", query="SELECT COUNT(x) FROM TeachersEntity x" )
} )
public class TeachersEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="id", nullable=false)
    private Integer    id           ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="full_name", length=2147483647)
    private String     fullName     ;

    @Column(name="login", length=50)
    private String     login        ;

    @Column(name="password", length=50)
    private String     password     ;

    @Column(name="cathedra", length=50)
    private String     cathedra     ;

    @Column(name="enabled", length=2147483647)
    private String     enabled      ;

	// "roleId" (column "role_id") is not defined by itself because used as FK in a link 


    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
    @OneToMany(mappedBy="teachers", targetEntity=DisciplinesEntity.class)
    private List<DisciplinesEntity> listOfDisciplines;

    @ManyToOne
    @JoinColumn(name="role_id", referencedColumnName="id")
    private RolesEntity roles       ;


    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public TeachersEntity() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setId( Integer id ) {
        this.id = id ;
    }
    public Integer getId() {
        return this.id;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : full_name ( text ) 
    public void setFullName( String fullName ) {
        this.fullName = fullName;
    }
    public String getFullName() {
        return this.fullName;
    }

    //--- DATABASE MAPPING : login ( varchar ) 
    public void setLogin( String login ) {
        this.login = login;
    }
    public String getLogin() {
        return this.login;
    }

    //--- DATABASE MAPPING : password ( varchar ) 
    public void setPassword( String password ) {
        this.password = password;
    }
    public String getPassword() {
        return this.password;
    }

    //--- DATABASE MAPPING : cathedra ( varchar ) 
    public void setCathedra( String cathedra ) {
        this.cathedra = cathedra;
    }
    public String getCathedra() {
        return this.cathedra;
    }

    //--- DATABASE MAPPING : enabled ( text ) 
    public void setEnabled( String enabled ) {
        this.enabled = enabled;
    }
    public String getEnabled() {
        return this.enabled;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    public void setListOfDisciplines( List<DisciplinesEntity> listOfDisciplines ) {
        this.listOfDisciplines = listOfDisciplines;
    }
    public List<DisciplinesEntity> getListOfDisciplines() {
        return this.listOfDisciplines;
    }

    public void setRoles( RolesEntity roles ) {
        this.roles = roles;
    }
    public RolesEntity getRoles() {
        return this.roles;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(id);
        sb.append("]:"); 
        sb.append(fullName);
        sb.append("|");
        sb.append(login);
        sb.append("|");
        sb.append(password);
        sb.append("|");
        sb.append(cathedra);
        sb.append("|");
        sb.append(enabled);
        return sb.toString(); 
    } 

}
